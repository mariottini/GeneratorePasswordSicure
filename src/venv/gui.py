'''
    TODO:

    - FONT INCLUSI IN TKINTER
    - VARIABILI GLOBALI
    - RIPOSIZIONARE TESTI
    - IMPORTARE LOGICA DA MAIN.PY
    - FONT
    - COMMENTI
'''

# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, font
from PasswordGenerator import PasswordGenerator

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = Path(__file__).parent / Path("assets")

# print(f"OUTPUT_PATH = {OUTPUT_PATH}") !!!!! REMOVE !!!!!
# print(f"ASSETS_PATH = {ASSETS_PATH}") !!!!! REMOVE !!!!!

'''
    Crea l'oggetto Path combinando ASSETS_PATH e il nome del file
'''
def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

def pwLengthPlus():
    global pwLength
    if pwLength < 128:
        pwLength += 1
    canvas.itemconfig(idPwLength, text=f"{pwLength}")

def pwLengthMinus():
    global pwLength
    if pwLength > 8:
        pwLength -= 1
    canvas.itemconfig(idPwLength, text=f"{pwLength}")

'''
    Definizione variabili globali per la GUI
'''
windowWidth = 900
windowHeight = 600
canvasBgColor = "#1E1E1E"
mainTextColor = "#DDDDDD"
rectColor = "#2F2F2F"
choiceBtnWidth = 150
choiceBtnHeight = 40
pwLengthBtnDimension = 30

pwGenerator = PasswordGenerator() # Create Password Generator
pwLength = 8

'''
    Create window
'''
window = Tk()
window.geometry(f"{windowWidth}x{windowHeight}")
window.configure(bg = canvasBgColor)

'''
    Canvas della GUI
'''
canvas = Canvas(
    window,
    bg = canvasBgColor,
    height = windowHeight,
    width = windowWidth,
    borderwidth = 0,
    highlightthickness = 0,
    relief = "flat" 
)
canvas.place(
    x = 0, 
    y = 0
) 

'''
    Titolo
'''
canvas.create_text(
    140.0,
    30.0,
    anchor = "nw",
    text = "RANDOM PASSWORD GENERATOR",
    fill = mainTextColor,
    font = ("JosefinSans Regular", 36 * -1)
)

'''
    Button lettere minuscole
'''
lowercaseBtnImg = PhotoImage(
    file = relative_to_assets("imgs/lowercaseBtnImg.png")
)
lowercaseBtn = Button(
    image = lowercaseBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = lambda: print("lowercaseBtn clicked"),
    relief = "flat"
)
lowercaseBtn.place(
    x = 90.0,
    y = 110.0,
    width = choiceBtnWidth,
    height = choiceBtnHeight
)

'''
    Button lettere maiuscole
'''
uppercaseBtnImg = PhotoImage(
    file = relative_to_assets("imgs/uppercaseBtnImg.png")
)
uppercaseBtn = Button(
    image = uppercaseBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = lambda: print("imgs/uppercaseBtn clicked"),
    relief = "flat"
)
uppercaseBtn.place(
    x = 280.0,
    y = 110.0,
    width = choiceBtnWidth,
    height = choiceBtnHeight
)

'''
    Button cifre
'''
digitsBtnImg = PhotoImage(
    file = relative_to_assets("imgs/digitsBtnImg.png")
)
digitsBtn = Button(
    image = digitsBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = lambda: print("digitsBtn clicked"),
    relief = "flat"
)
digitsBtn.place(
    x = 470.0,
    y = 110.0,
    width = choiceBtnWidth,
    height = choiceBtnHeight
)

'''
    Button caratteri speciali
'''
specialCharsBtnImg = PhotoImage(
    file = relative_to_assets("imgs/specialCharsBtnImg.png")
)
specialCharsBtn = Button(
    image = specialCharsBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = lambda: print("specialCharsBtn clicked"),
    relief = "flat"
)
specialCharsBtn.place(
    x = 660.0,
    y = 110.0,
    width = choiceBtnWidth,
    height = choiceBtnHeight
)

'''
    Numero di caratteri
'''
idPwLength = canvas.create_text(
    430.0,
    182.0,
    anchor = "nw",
    text = f"{pwLength}",
    fill = mainTextColor,
    font = ("JosefinSans Regular", 24 * -1)
)

'''
    Button + numero caratteri
'''
increasePwLengthBtnImg = PhotoImage(
    file = relative_to_assets("imgs/increasePwLengthBtnImg.png")
)
increasePwLengthBtn = Button(
    image = increasePwLengthBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = pwLengthPlus,
    relief = "flat"
)
increasePwLengthBtn.place(
    x = 480.0,
    y = 180.0,
    width = pwLengthBtnDimension,
    height = pwLengthBtnDimension
)

'''
    Button - numero caratteri
'''
decreasePwLengthBtnImg = PhotoImage(
    file = relative_to_assets("imgs/decreasePwLengthBtnImg.png")
)
decreasePwLengthBtn = Button(
    image = decreasePwLengthBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = pwLengthMinus,
    relief = "flat"
)
decreasePwLengthBtn.place(
    x = 390.0,
    y = 180.0,
    width = pwLengthBtnDimension,
    height = pwLengthBtnDimension
)

'''
    Spazio per visualizzare la password generata
'''
canvas.create_rectangle(
    175.0,
    240.0,
    725.0,
    350.0,
    fill = rectColor,
    outline = ""
)

'''
    Password generata
'''
canvas.create_text(
    175.0,
    240.0,
    anchor = "nw",
    text = "fW[q0JM#",
    fill = mainTextColor,
    font = ("JosefinSans Regular", 24 * -1)
)

'''
    Button genera password
'''
generatePwBtnImg = PhotoImage(
    file = relative_to_assets("imgs/generatePwBtnImg.png")
)
generatePwBtn = Button(
    image = generatePwBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = lambda: print("generatePwBtn clicked"),
    relief = "flat"
)
generatePwBtn.place(
    x = 175.0,
    y = 360.0,
    width = 270.0,
    height = 40.0
)

'''
    Button copia password
'''
copyPwBtnImg = PhotoImage(
    file = relative_to_assets("imgs/copyPwBtnImg.png"))
copyPwBtn = Button(
    image = copyPwBtnImg,
    borderwidth = 0,
    highlightthickness = 0,
    command = lambda: print("copyPwBtn clicked"),
    relief = "flat"
)
copyPwBtn.place(
    x = 455.0,
    y = 360.0,
    width = 270.0,
    height = 40.0
)

'''
    Spazio per visualizzare le info della password
'''
canvas.create_rectangle(
    125.0,
    430.0,
    775.0,
    540.0,
    fill = rectColor,
    outline = "")

'''
    Info della password
'''
canvas.create_text(
    125.0,
    430.0,
    anchor = "nw",
    text = "Entropia, sicurezza, ...",
    fill = mainTextColor,
    font = ("JosefinSans Regular", 16 * -1)
)

# =========================================================================

'''
    Disegna una griglia temporanea
'''
def draw_grid(canvas, width, height, spacing=20):
    # Disegna le linee verticali
    for x in range(0, width, spacing):
        canvas.create_line(x, 0, x, height, fill="red")
    
    # Disegna le linee orizzontali
    for y in range(0, height, spacing):
        canvas.create_line(0, y, width, y, fill="red")

draw_grid(canvas, windowWidth, windowHeight, spacing=10)

# =========================================================================

# '''
#     Barra di stato
# '''
# canvas.create_rectangle(
#     0.0,
#     580.0,
#     900.0,
#     600.0,
#     fill="#9546BC",
#     outline="")

# canvas.create_text(
#     10.0,
#     580.0,
#     anchor="nw",
#     text="a-z",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     40.0,
#     580.0,
#     anchor="nw",
#     text="A-Z",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     70.0,
#     580.0,
#     anchor="nw",
#     text="0-9",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     100.0,
#     580.0,
#     anchor="nw",
#     text="!”,-}~",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     140.0,
#     580.0,
#     anchor="nw",
#     text="128 caratteri",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     220.0,
#     580.0,
#     anchor="nw",
#     text="Livello di complessità: Medio",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     370.0,
#     580.0,
#     anchor="nw",
#     text="Livello di sicurezza: Medio",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

# canvas.create_text(
#     510.0,
#     580.0,
#     anchor="nw",
#     text="Entropia: 52.44",
#     fill="#BBBBBB",
#     font=("JosefinSans Regular", 10 * -1)
# )

window.resizable(False, False)
window.mainloop()
